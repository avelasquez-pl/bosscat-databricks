# Databricks notebook source
# MAGIC %sql
# MAGIC create table if not exists silver.estimate_audit (
# MAGIC   id string,
# MAGIC   approved_by string,
# MAGIC   approved_on timestamp,
# MAGIC   created_by string,
# MAGIC   created_on timestamp,
# MAGIC   delivered_by string,
# MAGIC   delivered_on timestamp,
# MAGIC   deposit_invoice_amount double,
# MAGIC   deposit_invoice_sent_by string,
# MAGIC   deposit_invoice_sent_on timestamp,
# MAGIC   invoiced_by string,
# MAGIC   invoiced_on timestamp,
# MAGIC   job_completed_by string,
# MAGIC   job_completed_on timestamp,
# MAGIC   job_started_on timestamp,
# MAGIC   last_delivered_by string,
# MAGIC   last_delivered_on timestamp,
# MAGIC   last_invoiced_by string,
# MAGIC   last_invoiced_on timestamp,
# MAGIC   last_payment_date timestamp,
# MAGIC   last_pay_at_close_update timestamp,
# MAGIC   serviceable boolean,
# MAGIC   hashkey string
# MAGIC )

# COMMAND ----------

# MAGIC %sql
# MAGIC merge into silver.estimate_audit s
# MAGIC using bronze.app_estimate_audit b
# MAGIC on s.id = b.id
# MAGIC when matched and s.hashkey != b.hashkey then update set 
# MAGIC   s.id = b.id,
# MAGIC   s.approved_by = b.approved_by,
# MAGIC   s.approved_on = from_unixtime(b.approved_on),
# MAGIC   s.created_by = b.created_by,
# MAGIC   s.created_on = from_unixtime(b.created_on),
# MAGIC   s.delivered_by = b.delivered_by,
# MAGIC   s.delivered_on = from_unixtime(b.delivered_on),
# MAGIC   s.deposit_invoice_amount = b.deposit_invoice_amount,
# MAGIC   s.deposit_invoice_sent_by = b.deposit_invoice_sent_by,
# MAGIC   s.deposit_invoice_sent_on = from_unixtime(b.deposit_invoice_sent_on),
# MAGIC   s.invoiced_by = b.invoiced_by,
# MAGIC   s.invoiced_on = from_unixtime(b.invoiced_on),
# MAGIC   s.job_completed_by = b.job_completed_by,
# MAGIC   s.job_completed_on = from_unixtime(b.job_completed_on),
# MAGIC   s.job_started_on = from_unixtime(b.job_started_on),
# MAGIC   s.last_delivered_by = b.last_delivered_by,
# MAGIC   s.last_delivered_on = from_unixtime(b.last_delivered_on),
# MAGIC   s.last_invoiced_by = b.last_invoiced_by,
# MAGIC   s.last_invoiced_on = from_unixtime(b.last_invoiced_on),
# MAGIC   s.last_payment_date = from_unixtime(b.last_payment_date),
# MAGIC   s.last_pay_at_close_update = from_unixtime(b.last_pay_at_close_update),
# MAGIC   s.serviceable = b.serviceable,
# MAGIC   s.hashkey = b.hashkey
# MAGIC when not matched then insert (
# MAGIC   id,
# MAGIC   approved_by,
# MAGIC   approved_on,
# MAGIC   created_by,
# MAGIC   created_on,
# MAGIC   delivered_by,
# MAGIC   delivered_on,
# MAGIC   deposit_invoice_amount,
# MAGIC   deposit_invoice_sent_by,
# MAGIC   deposit_invoice_sent_on,
# MAGIC   invoiced_by,
# MAGIC   invoiced_on,
# MAGIC   job_completed_by,
# MAGIC   job_completed_on,
# MAGIC   job_started_on,
# MAGIC   last_delivered_by,
# MAGIC   last_delivered_on,
# MAGIC   last_invoiced_by,
# MAGIC   last_invoiced_on,
# MAGIC   last_payment_date,
# MAGIC   last_pay_at_close_update,
# MAGIC   serviceable,
# MAGIC   hashkey
# MAGIC ) values (
# MAGIC   b.id,
# MAGIC   b.approved_by,
# MAGIC   from_unixtime(b.approved_on),
# MAGIC   b.created_by,
# MAGIC   from_unixtime(b.created_on),
# MAGIC   b.delivered_by,
# MAGIC   from_unixtime(b.delivered_on),
# MAGIC   b.deposit_invoice_amount,
# MAGIC   b.deposit_invoice_sent_by,
# MAGIC   from_unixtime(b.deposit_invoice_sent_on),
# MAGIC   b.invoiced_by,
# MAGIC   from_unixtime(b.invoiced_on),
# MAGIC   b.job_completed_by,
# MAGIC   from_unixtime(b.job_completed_on),
# MAGIC   from_unixtime(b.job_started_on),
# MAGIC   b.last_delivered_by,
# MAGIC   from_unixtime(b.last_delivered_on),
# MAGIC   b.last_invoiced_by,
# MAGIC   from_unixtime(b.last_invoiced_on),
# MAGIC   from_unixtime(b.last_payment_date),
# MAGIC   from_unixtime(b.last_pay_at_close_update),
# MAGIC   b.serviceable,
# MAGIC   b.hashkey
# MAGIC )
# MAGIC when not matched by source then delete
